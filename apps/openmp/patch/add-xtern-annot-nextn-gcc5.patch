--- gcc-5.4.0-orig/libgomp/config/posix/bar.c	2015-01-10 14:10:37.000000000 -0500
+++ gcc-5.4.0/libgomp/config/posix/bar.c	2018-07-13 21:12:46.565087723 -0400
@@ -29,6 +29,7 @@
    POSIX pthread_barrier_t won't work.  */
 
 #include "libgomp.h"
+#include "tern/user.h"
 
 
 void
@@ -44,6 +45,7 @@
   bar->arrived = 0;
   bar->generation = 0;
   bar->cancellable = false;
+  soba_init((long)bar, count, 20*omp_get_max_threads());
 }
 
 void
@@ -59,6 +61,7 @@
 #endif
   gomp_sem_destroy (&bar->sem1);
   gomp_sem_destroy (&bar->sem2);
+  soba_destroy((long)bar);
 }
 
 void
@@ -79,9 +82,10 @@
       n = --bar->arrived;
       if (n > 0)
 	{
-	  do
+	  do{
+      slock_next_n(n-1 != 0?2:1);
 	    gomp_sem_post (&bar->sem1);
-	  while (--n != 0);
+    }while (--n != 0);
 	  gomp_sem_wait (&bar->sem2);
 	}
       gomp_mutex_unlock (&bar->mutex1);
@@ -108,6 +112,7 @@
 gomp_barrier_wait (gomp_barrier_t *barrier)
 {
   gomp_barrier_wait_end (barrier, gomp_barrier_wait_start (barrier));
+  soba_wait((long)barrier);
 }
 
 void
@@ -135,9 +140,10 @@
       bar->generation = state + BAR_INCR - BAR_WAS_LAST;
       if (n > 0)
 	{
-	  do
+	  do{
+      slock_next_n(n-1 != 0?2:1);
 	    gomp_sem_post (&bar->sem1);
-	  while (--n != 0);
+    }while (--n != 0);
 	  gomp_sem_wait (&bar->sem2);
 	}
       gomp_mutex_unlock (&bar->mutex1);
@@ -197,9 +203,10 @@
       bar->generation = state + BAR_INCR - BAR_WAS_LAST;
       if (n > 0)
 	{
-	  do
+	  do{
+      slock_next_n(n-1 != 0?2:1);
 	    gomp_sem_post (&bar->sem1);
-	  while (--n != 0);
+    }while (--n != 0);
 	  gomp_sem_wait (&bar->sem2);
 	}
       gomp_mutex_unlock (&bar->mutex1);
@@ -250,6 +257,7 @@
 gomp_team_barrier_wait (gomp_barrier_t *barrier)
 {
   gomp_team_barrier_wait_end (barrier, gomp_barrier_wait_start (barrier));
+  soba_wait((long)barrier);
 }
 
 void
@@ -257,8 +265,10 @@
 {
   if (count == 0)
     count = bar->total - 1;
-  while (count-- > 0)
+  while (count-- > 0){
+    slock_next_n(count > 0?2:1);
     gomp_sem_post (&bar->sem1);
+  }
 }
 
 bool
@@ -288,9 +298,10 @@
       int n = team->barrier.arrived;
       if (n > 0)
 	{
-	  do
+	  do{
+      slock_next_n(n-1 != 0?2:1);
 	    gomp_sem_post (&team->barrier.sem1);
-	  while (--n != 0);
+    }while (--n != 0);
 	  gomp_sem_wait (&team->barrier.sem2);
 	}
       team->barrier.cancellable = false;
