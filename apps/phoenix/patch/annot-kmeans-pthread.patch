--- phoenix-2.0.0-orig/tests/kmeans/kmeans-pthread.c	2009-05-06 01:12:23.000000000 -0400
+++ phoenix-2.0.0/tests/kmeans/kmeans-pthread.c	2013-02-21 23:26:06.200445754 -0500
@@ -37,6 +37,7 @@
 
 #include "stddefines.h"
 #include "map_reduce.h"
+#include "tern/user.h"
 
 #define DEF_NUM_POINTS 100000
 #define DEF_NUM_MEANS 100
@@ -175,6 +176,7 @@
  */
 void *find_clusters(void *arg) 
 {
+   soba_wait(0);
    thread_arg *t_arg = (thread_arg *)arg;
    int i, j;
    unsigned int min_dist, cur_dist;
@@ -211,6 +213,7 @@
  */
 void *calc_means(void *arg)
 {
+   soba_wait(0);
    int i, j, grp_size;
    int *sum;
    thread_arg *t_arg = (thread_arg *)arg;
@@ -291,6 +294,7 @@
    /* Create the threads to process the distances between the various
    points and repeat until modified is no longer valid */
    int num_threads;   
+   soba_init(0, num_procs, num_procs*20);
    while (modified) 
    {
       num_per_thread = num_points / num_procs;
@@ -299,7 +303,7 @@
       dprintf(".");
       curr_point = 0;
       num_threads = 0;
-      
+
       while (curr_point < num_points) {
          CHECK_ERROR((arg = (thread_arg *)malloc(sizeof(thread_arg))) == NULL);
          arg->start_idx = curr_point;
