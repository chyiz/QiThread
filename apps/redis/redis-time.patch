diff -rupN redis-2.4.11/src/ae.c redis-2.4.11-modified/src/ae.c
--- redis-2.4.11/src/ae.c	2012-04-19 08:56:16.000000000 -0400
+++ redis-2.4.11-modified/src/ae.c	2013-08-27 14:24:12.371629953 -0400
@@ -127,27 +127,27 @@ int aeGetFileEvents(aeEventLoop *eventLo
     return fe->mask;
 }
 
-static void aeGetTime(long *seconds, long *milliseconds)
+static void aeGetTime(long *seconds, long *microseconds)
 {
     struct timeval tv;
 
     gettimeofday(&tv, NULL);
     *seconds = tv.tv_sec;
-    *milliseconds = tv.tv_usec/1000;
+    *microseconds = tv.tv_usec;
 }
 
-static void aeAddMillisecondsToNow(long long milliseconds, long *sec, long *ms) {
-    long cur_sec, cur_ms, when_sec, when_ms;
+static void aeAddMillisecondsToNow(long long milliseconds, long *sec, long *usec) {
+    long cur_sec, cur_usec, when_sec, when_usec;
 
-    aeGetTime(&cur_sec, &cur_ms);
+    aeGetTime(&cur_sec, &cur_usec);
     when_sec = cur_sec + milliseconds/1000;
-    when_ms = cur_ms + milliseconds%1000;
-    if (when_ms >= 1000) {
+    when_usec = cur_usec + (milliseconds%1000) * 1000;
+    if (when_usec >= 1000000) {
         when_sec ++;
-        when_ms -= 1000;
+        when_usec -= 1000000;
     }
     *sec = when_sec;
-    *ms = when_ms;
+    *usec = when_usec;
 }
 
 long long aeCreateTimeEvent(aeEventLoop *eventLoop, long long milliseconds,
@@ -160,7 +160,7 @@ long long aeCreateTimeEvent(aeEventLoop
     te = zmalloc(sizeof(*te));
     if (te == NULL) return AE_ERR;
     te->id = id;
-    aeAddMillisecondsToNow(milliseconds,&te->when_sec,&te->when_ms);
+    aeAddMillisecondsToNow(milliseconds,&te->when_sec,&te->when_usec);
     te->timeProc = proc;
     te->finalizerProc = finalizerProc;
     te->clientData = clientData;
@@ -210,7 +210,7 @@ static aeTimeEvent *aeSearchNearestTimer
     while(te) {
         if (!nearest || te->when_sec < nearest->when_sec ||
                 (te->when_sec == nearest->when_sec &&
-                 te->when_ms < nearest->when_ms))
+                 te->when_usec < nearest->when_usec))
             nearest = te;
         te = te->next;
     }
@@ -226,16 +226,16 @@ static int processTimeEvents(aeEventLoop
     te = eventLoop->timeEventHead;
     maxId = eventLoop->timeEventNextId-1;
     while(te) {
-        long now_sec, now_ms;
+        long now_sec, now_usec;
         long long id;
 
         if (te->id > maxId) {
             te = te->next;
             continue;
         }
-        aeGetTime(&now_sec, &now_ms);
+        aeGetTime(&now_sec, &now_usec);
         if (now_sec > te->when_sec ||
-            (now_sec == te->when_sec && now_ms >= te->when_ms))
+            (now_sec == te->when_sec && now_usec >= te->when_usec))
         {
             int retval;
 
@@ -256,7 +256,7 @@ static int processTimeEvents(aeEventLoop
              * deletion (putting references to the nodes to delete into
              * another linked list). */
             if (retval != AE_NOMORE) {
-                aeAddMillisecondsToNow(retval,&te->when_sec,&te->when_ms);
+                aeAddMillisecondsToNow(retval,&te->when_sec,&te->when_usec);
             } else {
                 aeDeleteTimeEvent(eventLoop, id);
             }
@@ -301,18 +301,18 @@ int aeProcessEvents(aeEventLoop *eventLo
         if (flags & AE_TIME_EVENTS && !(flags & AE_DONT_WAIT))
             shortest = aeSearchNearestTimer(eventLoop);
         if (shortest) {
-            long now_sec, now_ms;
+            long now_sec, now_usec;
 
             /* Calculate the time missing for the nearest
              * timer to fire. */
-            aeGetTime(&now_sec, &now_ms);
+            aeGetTime(&now_sec, &now_usec);
             tvp = &tv;
             tvp->tv_sec = shortest->when_sec - now_sec;
-            if (shortest->when_ms < now_ms) {
-                tvp->tv_usec = ((shortest->when_ms+1000) - now_ms)*1000;
-                tvp->tv_sec --;
+            if (shortest->when_usec < now_usec) {
+	      tvp->tv_usec = shortest->when_usec + 1000000 - now_usec;
+	      tvp->tv_sec --;
             } else {
-                tvp->tv_usec = (shortest->when_ms - now_ms)*1000;
+	      tvp->tv_usec = shortest->when_usec - now_usec;
             }
             if (tvp->tv_sec < 0) tvp->tv_sec = 0;
             if (tvp->tv_usec < 0) tvp->tv_usec = 0;
diff -rupN redis-2.4.11/src/ae.h redis-2.4.11-modified/src/ae.h
--- redis-2.4.11/src/ae.h	2012-04-19 08:56:16.000000000 -0400
+++ redis-2.4.11-modified/src/ae.h	2013-08-27 14:15:49.227647354 -0400
@@ -72,7 +72,7 @@ typedef struct aeFileEvent {
 typedef struct aeTimeEvent {
     long long id; /* time event identifier. */
     long when_sec; /* seconds */
-    long when_ms; /* milliseconds */
+    long when_usec; /* microseconds */
     aeTimeProc *timeProc;
     aeEventFinalizerProc *finalizerProc;
     void *clientData;
